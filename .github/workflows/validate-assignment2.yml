name: Validate And Review Infrastructure Assignment 2

# Controls when the workflow will run
on:
  # Triggers the workflow on push
  push:
    branches-ignore:
      - 'dev'
      - 'staging'
      - 'prod'
    paths:
      - 'kristiwg-oppg2/**'



# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "Review"
   terraform:
    name: 'Review infrastructure and merge to dev'
    # The type of runner that the job will run on
    runs-on: ubuntu-latest
    
    env:
      ARM_CLIENT_ID: ${{ secrets.AZURE_CLIENT_ID }}
      ARM_CLIENT_SECRET: ${{ secrets.AZURE_CLIENT_SECRET }}
      ARM_SUBSCRIPTION_ID: ${{ secrets.AZURE_SUBSCRIPTION_ID }}
      ARM_TENANT_ID: ${{ secrets.AZURE_TENANT_ID }}
      WORKING_DIR: ./kristiwg-oppg2
      GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      
    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v4

      # Runs a single command using the runners shell
      - name: Terraform fmt
        id: fmt
        run: terraform fmt -recursive
        working-directory: ${{ env.WORKING_DIR }}  

      # Runs a single command using the runners shell
      - name: Terraform init
        id: init
        run: terraform init
        working-directory: ${{ env.WORKING_DIR }}          

      - name: Terraform validate
        id: validate
        run: terraform validate
        working-directory: ${{ env.WORKING_DIR }}

      # Checks-out your repository under so your job can access it
      - uses: actions/checkout@master
      - name: tfsec
        # You may pin to the exact commit or the version.
        # uses: aquasecurity/tfsec-action@b466648d6e39e7c75324f25d83891162a721f2d6
        uses: aquasecurity/tfsec-action@v1.0.3
        with:
          # Directory to run the action on, from the repo root. Default is . (root of the repository)
          working_directory: ${{ env.WORKING_DIR }}
          github_token: ${{ env.GITHUB_TOKEN }}
        # Space separated args specified here will be added during tfsec execution.
        # (eg. --force-all-dirs --verbose)

      - name: Push feature branch to remote
        if: ${{ success() }}
        run: |
          git config user.name github-actions
          git config user.email github-actions@github.com
          git push origin HEAD:${{github.ref_name}} || echo "Remote feature branch already exists."

      - name: Merge to Dev
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          # Set up Git configuration
          git config user.name "github-actions"
          git config user.email "github-actions@github.com"

          # Fetch all branches
          git fetch origin

          # Check if the dev branch exists
          if git ls-remote --exit-code --heads origin dev; then
            echo "Dev branch exists. Checking it out."
            git checkout dev
            git pull origin dev
          else
            echo "Dev branch does not exist. Creating it."
            git checkout --orphan dev
            git commit --allow-empty -m "Initial commit for dev branch"
            git push origin dev
          fi

          # Merge feature branch into dev
          git checkout dev
          git merge ${{github.ref_name}} --no-ff -m "Merging feature branch ${{github.ref_name}} into dev"
          git push origin dev
