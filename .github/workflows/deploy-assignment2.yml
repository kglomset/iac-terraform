name: Deploy to Environment

# Controls when the workflow will run
on:
  push:
    branches:
      - dev
      - staging
      - prod

env:
  ARM_CLIENT_ID: ${{ secrets.AZURE_CLIENT_ID }}
  ARM_CLIENT_SECRET: ${{ secrets.AZURE_CLIENT_SECRET }}
  ARM_SUBSCRIPTION_ID: ${{ secrets.AZURE_SUBSCRIPTION_ID }}
  ARM_TENANT_ID: ${{ secrets.AZURE_TENANT_ID }}
  WORKING_DIR: ./kristiwg-oppg2/**

jobs:
  deploy-dev:
    if: ${{ github.ref == 'refs/heads/dev' }}
    runs-on: ubuntu-latest
    name: Deploy to Dev

    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Terraform init for Dev
        run: terraform init
        working-directory: ${{ env.WORKING_DIR }}

      - name: Select or create Dev workspace
        run: terraform workspace select dev || terraform workspace new dev
        working-directory: ${{ env.WORKING_DIR }}

      - name: Terraform apply for Dev
        run: terraform apply -auto-approve -var-file=terraform.dev.tfvars
        working-directory: ${{ env.WORKING_DIR }}

  deploy-staging:
    if: ${{ github.ref == 'refs/heads/staging' }}
    runs-on: ubuntu-latest
    name: Deploy to Staging

    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Terraform init for Staging
        run: terraform init
        working-directory: ${{ env.WORKING_DIR }}

      - name: Select or create Staging workspace
        run: terraform workspace select staging || terraform workspace new staging
        working-directory: ${{ env.WORKING_DIR }}

      - name: Terraform apply for Staging
        run: terraform apply -auto-approve -var-file=terraform.staging.tfvars
        working-directory: ${{ env.WORKING_DIR }}

  deploy-prod:
    if: ${{ github.ref == 'refs/heads/prod' }}
    runs-on: ubuntu-latest
    name: Deploy to Production

    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Terraform init for Production
        run: terraform init
        working-directory: ${{ env.WORKING_DIR }}

      - name: Select or create Production workspace
        run: terraform workspace select prod || terraform workspace new prod
        working-directory: ${{ env.WORKING_DIR }}

      - name: Manual Approval
        uses: trstringer/manual-approval@v1
        with:
          secret: ${{ secrets.GITHUB_TOKEN }}
          approvers: 'kglomset@gmail.com'
          minimum-approvals: 1
          issue-title: "Approval required for Production Deployment"
          issue-body: "Please review and approve the changes for production deployment."

      - name: Terraform apply for Production
        run: terraform apply -auto-approve -var-file=terraform.prod.tfvars
        working-directory: ${{ env.WORKING_DIR }}
